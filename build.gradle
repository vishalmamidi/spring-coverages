plugins {
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java'
	id 'jacoco'
}

group = 'com.vishalmamidi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

ext {
	jacocoVerification = true
	jacocoExcludes = [
			'com/vishalmamidi/**/model/**',
			'com/vishalmamidi/**/router/**'
	]
}


test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		html.required = true
		xml.required = true
	}
	afterEvaluate {
		excludedClassFilesForReport(classDirectories)
	}
}


jacocoTestCoverageVerification {
	afterEvaluate {
		excludedClassFilesForReport(classDirectories)
	}

	violationRules {
		enabled = jacocoVerification
		rule {
			limit {
				counter = 'INSTRUCTION'
				value = 'COVEREDRATIO'
				minimum = 0.01
			}
		}
		rule {
			enabled = false
			limit {
				counter = 'INSTRUCTION'
				value = 'COVEREDRATIO'
				minimum = 0.99
			}

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.99
			}
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.99
			}
			limit {
				counter = 'CLASS'
				value = 'COVEREDRATIO'
				minimum = 0.99
			}
			limit {
				counter = 'METHOD'
				value = 'COVEREDRATIO'
				minimum = 0.99
			}
		}
	}

}

private excludedClassFilesForReport(classDirectories) {
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it,
				exclude: jacocoExcludes
		)
	}))
}

jacoco {
	toolVersion = "0.8.13"
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport
